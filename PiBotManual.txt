Usarti seadistus:

	baudrate -> saatmise sagedus
	timeout  -> s�numite ooteaeg sekundites


muutujad:

	battery -> patarei pinge, loetav _adc_read funktsiooniga, kus conf & 1
	
	encoder -> jada kuhu (_encoders_get) salvestab enkoodrite v��rtused
	
		[0] - vasak enkooder
		[1] - parem enkooder
		
	gyro	-> muutuja kuhu (_imu_read_gyro) väärtused salvestab

		[0] - x telje hetkekiirendus
		[1] - y telje hetkekiirendus
		[2] - z telje hetkekiirendus
		[4] - x teljel güroskoop
		[5] - y teljel güroskoop
		[6] - z teljel güroskoop

	compass -> Jada, kuhu (_imu_read_compass) salvestab kompassi väärtused.

		[0] - nurk x-telje all
		[1] - nurk y-telje all
		[2] - nurk z-telje all
		
	sensor  -> kaugus- ja jooneandurite väärtuste jada
			
		[00] - parem kõrvalevaatav kaugusandur			   * P
		[01] - parem diagonaal kaugusandur				 *
		[02] - parem ettevaatav kaugusandur				*
				
		[03] - vasak ettevaatav kaugusandur				*
		[04] - vasak diagonaal kaugusandur				 *
		[05] - vasak kõrvalevaatav kaugusandur			   * V
				
		[06] - Patarei otselugem (salvestatud ka battery muutujasse)
		[07] - Kasutamata/tühi.
				
		[08] - parem äärmine jooneandur					   * P
		[09] - paremalt teine jooneandur				*
		[10] - parem keskmine jooneandur				*
				
		[11] - vasak keskmine jooneandur				*
		[12] - vasakult teine jooneandur				*
		[13] - vasak äärmine jooneandur					   * V
				
		[14] - Kasutamata/tühi
 		[15] - Kasutamata/tühi
				
	tof_values -> Jada, kuhu (_tof_read) salvestab ToF andurite väärtused

		[0] - vasak ToF andur
		[1] - otse vaatav ToF andur
		[2] - parem ToF andur
		
seadistus funktsioonid:

	_adc_conf(conf=3) -> ADC andurite lugemise seadistuse funktsioon (algväärtus = 0)
		conf:							 (vaikimisi  = 3)
			0 - andurid on välja lälitatud
			1 - käivitatud andurid 0 kuni 7
			2 - käivitatud andurid 8 kuni 15
			3 - käivitatud andurid 0 kuni 15
		
	_buzzer_set(buzzer) -> plaadil oleva k�lar suht signaali tugevus seadistus
		buzzer:
		 	0   - vaikus
			255 - maksimaalselt vali

	_encoders_enable() -> enkoodrite käivitus ja väärtuste nullimine

	_motors_enable() -> lülitab mootoritele voolus sisse ja võimaldab nende juhtimise

	_motorR_set(val= 0) -> seadistab parempoolse mootori kiirus väärtuse val-iks
		val: 
			-99 - maksimaalne kiirus tagurpidi
			0   - pidurdamine
			 99 - maksimaalne kiirus edasi

	_motorL_set(val= 0) -> seadistab vasakpoolse mootori kiirus väärtuse val-iks
		val: 
			-99 - maksimaalne kiirus tagurpidi
			0   - pidurdamine
			 99 - maksimaalne kiirus edasi

	_motorB_set(val= 0) -> seadistab mõlema mootori kiirus väärtuse val-iks
		val: 
			-99 - maksimaalne kiirus tagurpidi
			0   - pidurdamine
			 99 - maksimaalne kiirus edasi

	_servo_enable() -> võimaldab servo juhtimise

	_servo_one_set(val) seadistab esimese servomootori väärtuse val-iks
		val:
			väärtused 0 kuni 255
			eeldus on sobivad väärtused 25 kuni 36
			haaratsi väärtused
				25 - haarats täiesti koos 
				36 - haarats täiesti lahti
			
	_servo_two_set(val) seadistab teise servomootori väärtuse val-iks
		val:
			väärtused 0 kuni 255
			eeldus on sobivad väärtused 30 kuni 42
			haaratsi nurk:
				30 - võimalikult üleval
				42 - täiesti all
				
lugemise funktsioonid:

	_adc_read(conf) -> kirjtab vastavad andurite väärtused jadasse sensor
			conf:							 (vaikimisi  = 3)
			1 - loeb andurid 0 kuni 7 (sh. ka akupinge!)
			2 - loeb andurid 8 kuni 15
			3 - loeb andurid 0 kuni 15

	_encoders_get()	-> salvestab enkoodrite väärtused jadasse encoder 

	_imu_read_gyro() -> salvestab kiirendusanduri ja güroskoopi mooduli väärtused muutujasse gyro

	_imu_read_compass() -> salvestab magnetomeetri (kompassi) nurkväärtused muutujase compass.
	
Kasutamine:

	n�ide:
		from commRaspMain import PiBot
	
		mybot = PiBot()
		
		mybot._motors_enable()
		
		mybot._motorB_set(50)
		
	selgitus
		
		import kaasab PiBot klassi faili
		
		mybot on handler PiBot-ile
		
		k�ik funktsioonid  ja muutujad on klassi PiBot kuuluvad funktsioonid
		ehk tuleb kutsuda l�bi PiBot handleri ehk antud juhul mybot 